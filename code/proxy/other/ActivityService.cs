//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace norpim.BusinessLogicLayer.Other
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="norpim.BusinessLogicLayer.Other.IActivityService")]
    public interface IActivityService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivityService/AddActivity", ReplyAction="http://tempuri.org/IActivityService/AddActivityResponse")]
        void AddActivity(System.Guid userId, string userActivityTypeRcd, string activityNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivityService/AddActivity", ReplyAction="http://tempuri.org/IActivityService/AddActivityResponse")]
        System.Threading.Tasks.Task AddActivityAsync(System.Guid userId, string userActivityTypeRcd, string activityNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivityService/DeleteAll", ReplyAction="http://tempuri.org/IActivityService/DeleteAllResponse")]
        void DeleteAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivityService/DeleteAll", ReplyAction="http://tempuri.org/IActivityService/DeleteAllResponse")]
        System.Threading.Tasks.Task DeleteAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivityService/Login", ReplyAction="http://tempuri.org/IActivityService/LoginResponse")]
        System.Guid Login(string userCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivityService/Login", ReplyAction="http://tempuri.org/IActivityService/LoginResponse")]
        System.Threading.Tasks.Task<System.Guid> LoginAsync(string userCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActivityServiceChannel : norpim.BusinessLogicLayer.Other.IActivityService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivityServiceClient : System.ServiceModel.ClientBase<norpim.BusinessLogicLayer.Other.IActivityService>, norpim.BusinessLogicLayer.Other.IActivityService
    {
        
        public ActivityServiceClient()
        {
        }
        
        public ActivityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ActivityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ActivityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ActivityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public void AddActivity(System.Guid userId, string userActivityTypeRcd, string activityNote)
        {
            base.Channel.AddActivity(userId, userActivityTypeRcd, activityNote);
        }
        
        public System.Threading.Tasks.Task AddActivityAsync(System.Guid userId, string userActivityTypeRcd, string activityNote)
        {
            return base.Channel.AddActivityAsync(userId, userActivityTypeRcd, activityNote);
        }
        
        public void DeleteAll()
        {
            base.Channel.DeleteAll();
        }
        
        public System.Threading.Tasks.Task DeleteAllAsync()
        {
            return base.Channel.DeleteAllAsync();
        }
        
        public System.Guid Login(string userCode)
        {
            return base.Channel.Login(userCode);
        }
        
        public System.Threading.Tasks.Task<System.Guid> LoginAsync(string userCode)
        {
            return base.Channel.LoginAsync(userCode);
        }
    }
}
