//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace norpim.UserInterface.ActivityProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ActivityProxy.IActivityService")]
    public interface IActivityService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivityService/AddActivity", ReplyAction="http://tempuri.org/IActivityService/AddActivityResponse")]
        void AddActivity(System.Guid userId, string userActivityTypeRcd, string activityNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivityService/DeleteAll", ReplyAction="http://tempuri.org/IActivityService/DeleteAllResponse")]
        void DeleteAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivityService/TestTransaction", ReplyAction="http://tempuri.org/IActivityService/TestTransactionResponse")]
        void TestTransaction();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActivityServiceChannel : norpim.UserInterface.ActivityProxy.IActivityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivityServiceClient : System.ServiceModel.ClientBase<norpim.UserInterface.ActivityProxy.IActivityService>, norpim.UserInterface.ActivityProxy.IActivityService {
        
        public ActivityServiceClient() {
        }
        
        public ActivityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActivityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddActivity(System.Guid userId, string userActivityTypeRcd, string activityNote) {
            base.Channel.AddActivity(userId, userActivityTypeRcd, activityNote);
        }
        
        public void DeleteAll() {
            base.Channel.DeleteAll();
        }
        
        public void TestTransaction() {
            base.Channel.TestTransaction();
        }
    }
}
